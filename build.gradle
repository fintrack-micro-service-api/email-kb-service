plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
}

group 'com.example'
version '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}
ext {
    set('springCloudVersion', "2022.0.4")
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation 'com.google.code.gson:gson'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    //resource serve
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
//    implementation(project(":common"))
    implementation 'org.springframework:spring-test:6.0.12'
    compileOnly 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
        implementation 'org.springframework.kafka:spring-kafka'








}
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
test {
    useJUnitPlatform()
}